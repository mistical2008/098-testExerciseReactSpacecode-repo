{"version":3,"sources":["components/Map/index.module.css","components/Carousel/index.module.css","components/Map/location-marker.png","components/Map/location-current.png","context/parks-context.js","components/Carousel/index.jsx","components/Map/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GeoDataContext","React","createContext","GeoDataProvider","children","useState","geoData","data","setData","value","activePointIndex","setActivePointIndex","Provider","useGeoData","context","useContext","undefined","Error","displayName","SwiperCore","use","Pagination","Navigation","Carousel","console","log","pagination","type","navigation","className","onSlideChange","event","activeIndex","onSwiper","swiper","parkPoints","map","point","styles","imageContainer","alt","citybug","src","address","regularMarker","Icon","iconUrl","regularMarkerImg","iconSize","currentLocationMarker","currentMarkerImg","SetViewOnClick","useMapEvent","e","setView","latlng","getZoom","animate","Map","currentLocation","activePosition","latitude","longitude","mapWrapper","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","icon","Popup","join","overflowWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bc39e2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapWrapper\":\"Map_mapWrapper__1T560\",\"overflowWrapper\":\"Map_overflowWrapper__3mi7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"Carousel_imageContainer__1V6Wn\"};","export default __webpack_public_path__ + \"static/media/location-marker.9238adad.png\";","export default __webpack_public_path__ + \"static/media/location-current.17345b61.png\";","import React, { useState } from \"react\";\nimport geoData from \"../mockDB/data.json\";\n\nconst GeoDataContext = React.createContext();\nGeoDataContext.displayName = \"GeoDataContext\";\n\nfunction GeoDataProvider({ children }) {\n  const [data, setData] = useState(geoData);\n  const [activePointIndex, setActivePointIndex] = useState(0);\n  const value = { data, setData, activePointIndex, setActivePointIndex };\n  return (\n    <GeoDataContext.Provider value={value}>{children}</GeoDataContext.Provider>\n  );\n}\n\nfunction useGeoData() {\n  const context = React.useContext(GeoDataContext);\n  if (context === undefined) {\n    throw new Error(\n      `\"useGeoData\" hook must be used only within \"GeoDataProvider\"`\n    );\n  }\n  return context;\n}\n\nexport { GeoDataProvider, useGeoData };\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Pagination, Navigation } from \"swiper/core\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport \"./styles.css\";\nimport styles from \"./index.module.css\";\nimport { useGeoData } from \"../../context/parks-context.js\";\n\nSwiperCore.use([Pagination, Navigation]);\n\nfunction Carousel() {\n  const { data, activePointIndex, setActivePointIndex } = useGeoData();\n\n  function onSlideChange(event) {\n    setActivePointIndex(() => event.activeIndex);\n  }\n\n  console.log(activePointIndex);\n  return (\n    <>\n      <Swiper\n        pagination={{\n          type: \"fraction\",\n        }}\n        navigation={true}\n        className=\"mySwiper\"\n        onSlideChange={onSlideChange}\n        onSwiper={(swiper) => console.log(swiper)}\n      >\n        {data.parkPoints.map((point) => (\n          <SwiperSlide>\n            <p className={styles.imageContainer}>\n              <img alt={point.citybug} src={`./assets/${point.citybug}.jpg`} />\n              <span>\n                <b>Адрес:</b> {point.address}\n              </span>\n            </p>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </>\n  );\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Popup,\n  Marker,\n  useMapEvent,\n} from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport regularMarkerImg from \"./location-marker.png\";\nimport currentMarkerImg from \"./location-current.png\";\nimport { useGeoData } from \"../../context/parks-context\";\nimport Carousel from \"../Carousel\";\nimport styles from \"./index.module.css\";\n\nexport const regularMarker = new Icon({\n  iconUrl: regularMarkerImg,\n  iconSize: [25, 25],\n});\n\nexport const currentLocationMarker = new Icon({\n  iconUrl: currentMarkerImg,\n  iconSize: [25, 25],\n});\n\nfunction SetViewOnClick() {\n  const map = useMapEvent(\"click\", (e) => {\n    map.setView(e.latlng, map.getZoom(), {\n      animate: true,\n    });\n  });\n\n  return null;\n}\n\nconst Map = () => {\n  const { data, activePointIndex } = useGeoData();\n  const { currentLocation, parkPoints } = data;\n  const activePosition = [\n    parkPoints[activePointIndex].latitude,\n    parkPoints[activePointIndex].longitude,\n  ];\n\n  return (\n    <div className={styles.mapWrapper}>\n      <MapContainer center={currentLocation} zoom={13} scrollWheelZoom={true}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://maps.geoapify.com/v1/tile/dark-matter-brown/{z}/{x}/{y}.png?apiKey=e24b101acbd2442093544af11f463dc3\"\n        />\n        <Marker\n          key={currentLocation.join(\"-\")}\n          position={currentLocation}\n          icon={currentLocationMarker}\n        >\n          <Popup>\n            <p>Я нахожусь здесь :)</p>\n          </Popup>\n        </Marker>\n        {parkPoints.map((point) => (\n          <Marker\n            key={`${point.longitude}-${point.latitude}`}\n            position={[point.latitude, point.longitude]}\n            icon={regularMarker}\n          >\n            <Popup>\n              <p>\n                <b>Адрес:</b> {point.address} <br />\n                <b>Модель самоката:</b> {point.citybug}\n              </p>\n            </Popup>\n          </Marker>\n        ))}\n        {activePointIndex >= 0 && (\n          <Popup position={activePosition}>\n            <p>\n              <b>Адрес:</b> {parkPoints[activePointIndex].address} <br />\n              <b>Модель самоката:</b> {parkPoints[activePointIndex].citybug}\n            </p>\n          </Popup>\n        )}\n        <SetViewOnClick />\n      </MapContainer>\n      <div className={styles.overflowWrapper}>\n        <Carousel />\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\nimport { GeoDataProvider } from \"./context/parks-context\";\n\nfunction App() {\n  return (\n    <GeoDataProvider>\n      <Map />\n    </GeoDataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}